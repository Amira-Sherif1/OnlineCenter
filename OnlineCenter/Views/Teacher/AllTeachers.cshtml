@using Models
@model List<Teacher>
@{
    Layout = "~/Views/Shared/DashLayout.cshtml";
}

<div class="container-xxl flex-grow-1 container-p-y">
    <!-- Add teachers Button -->
    <div class="mb-4">
        <a href="@Url.Action("AddUser", "MangeUsers", new { number = 1 })" class="btn btn-primary">Add Teacher</a>
    </div>

    <div class="card">
        <h5 class="card-header">All Teachers</h5>
        <div class="table-responsive text-nowrap">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Address</th>
                        <th>Degree</th>
                      @*   <th>Actions</th> *@

                    </tr>
                </thead>
                <tbody class="table-border-bottom-0">
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td><strong>@item.ApplicationUser.UserName</strong></td>
                            <td><strong>@item.ApplicationUser.Email</strong></td>
                            <td><strong>@item.ApplicationUser.Address</strong></td>
                            <td><strong>@item.Degree</strong></td>
                            @* <td>
                                <div class="dropdown">
                                    <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                        <i class="bx bx-dots-vertical-rounded"></i>
                                    </button>
                                    <div class="dropdown-menu">
                                        @* <a class="dropdown-item" href="@Url.Action("EditUser", "MangeUsers", new { number = 1, id = item.ApplicationUserId })">
                                            <i class="bx bx-edit-alt me-1"></i> Edit
                                        </a> 
                                        <a class="dropdown-item delete-btn"
                                           href="javascript:void(0);"
                                           data-id="@item.ApplicationUserId"
                                           data-title="@item.ApplicationUser.UserName"
                                           data-url="@Url.Action("Delete", "MangeUsers", new { ApplicationUserId = item.ApplicationUserId , number=1})">
                                            <i class="bx bx-trash me-1"></i> Delete
                                        </a>
                                    </div>
                                </div>
                            </td> *@
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const deleteButtons = document.querySelectorAll('.delete-btn');

            deleteButtons.forEach(button => {
                button.addEventListener('click', function () {
                    const TeacherName = button.getAttribute('data-title');
                    const deleteUrl = button.getAttribute('data-url'); // URL generated by Razor

                    Swal.fire({
                        title: `Are you sure you want to delete "${TeacherName}"?`,
                        text: "You won't be able to revert this!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Yes, delete it!',
                        cancelButtonText: 'No, cancel!',
                        reverseButtons: true
                    }).then((result) => {
                        if (result.isConfirmed) {
                            Swal.fire({
                                title: 'Deleted!',
                                text: `"${TeacherName}" has been successfully deleted.`,
                                icon: 'success'
                            }).then(() => {
                                // Redirect to the delete URL
                                window.location.href = deleteUrl;
                            });
                        } else if (result.dismiss === Swal.DismissReason.cancel) {
                            Swal.fire(
                                'Cancelled',
                                `"${TeacherName}" is safe.`,
                                'error'
                            );
                        }
                    });
                });
            });
        });


    </script>
}
